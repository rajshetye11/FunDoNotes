<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="com.bridgelabz.fundonotes.response.ResponseDto"/>
    <fullyQualifiedTypeName name="com.fundouser.response.ResponseDto"/>
    <fullyQualifiedTypeName name="com.fundouser.utils.TokenService"/>
    <fullyQualifiedTypeName name="com.fundouser.utils.EmailSender"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="com.fundouser.config.PasswordEncoderConfig"/>
    <fullyQualifiedTypeName name="com.fundouser.dto.UserDto"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="java.sql.Date"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
    <fullyQualifiedTypeName name="com.fundouser.repository.UserRepo"/>
    <fullyQualifiedTypeName name="com.fundouser.service.IUserService"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"/>
    <fullyQualifiedTypeName name="springfox.documentation.builders.RequestHandlerSelectors"/>
    <fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
    <fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.fundouser.service.UserService"/>
    <fullyQualifiedTypeName name="com.fundouser.entity.User"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.fundouser.Exception.FunDoNotesCutomException"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="com.fundouser.dto.LoginDto"/>
    <fullyQualifiedTypeName name="org.springframework.beans.BeanUtils"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestHeader"/>
    <fullyQualifiedTypeName name="com.fundouser.dto.UpdatePasswordDto"/>
    <fullyQualifiedTypeName name="org.aspectj.apache.bcel.generic.RET"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="com.fundonotes.entity.Note"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="javax.persistence.ManyToMany"/>
    <fullyQualifiedTypeName name="javax.persistence.JoinTable"/>
    <fullyQualifiedTypeName name="com.fundonotes.utils.TokenService"/>
    <fullyQualifiedTypeName name="com.fundonotes.repo.LabelRepository"/>
    <fullyQualifiedTypeName name="com.fundonotes.entity.Label"/>
    <fullyQualifiedTypeName name="com.fundonotes.repo.NoteRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="com.fundonotes.service.LabelService"/>
    <fullyQualifiedTypeName name="com.fundonotes.response.ResponseDto"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="com.fundonotes.entity.User"/>
    <fullyQualifiedTypeName name="java.util.stream.Collector"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.fundonotes.Exception.FunDoNotesCutomException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.zuul.EnableZuulProxy"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
</qualifiedTypeNameHistroy>
